name: Build

on:
  push:
    branches:
      - main

env:
  FLUTTER_VERSION: '3.19.2'
  RETENTION_DAYS: 7

jobs:
  scrape:
    name: Scrape Data
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: oven-sh/setup-bun@v1
        with:
          bun-version: latest

      - uses: actions/cache/restore@v4
        id: cache
        with:
          path: data-scraper/node_modules
          key: ${{ runner.os }}-${{ hashFiles('data-scraper/bun.lockb') }}

      - name: Install Dependencies
        if: steps.cache.outputs.cache-hit != 'true'
        working-directory: data-scraper
        run: bun install --frozen-lockfile

      - uses: actions/cache/save@v4
        if: steps.cache.outputs.cache-hit != 'true'
        with:
          path: data-scraper/node_modules
          key: ${{ runner.os }}-${{ hashFiles('data-scraper/bun.lockb') }}

      - name: Run scraper
        working-directory: data-scraper
        run: bun run .

      - uses: actions/upload-artifact@v4
        with:
          name: scraped
          path: data-scraper/data/raw.json
          retention-days: 1

  build-apk:
    name: Build Android App
    runs-on: ubuntu-latest
    outputs:
      run-id: ${{ github.run_id }}
    needs:
      - scrape
    steps:
      - uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Setup Android SDK
        uses: android-actions/setup-android@v3

      - uses: subosito/flutter-action@v2
        with:
          channel: 'stable'
          flutter-version: ${{ env.FLUTTER_VERSION }}
          cache: true

      - name: Create keystore
        run: |
          echo "${{ secrets.KEYSTORE }}" | base64 -d | tee keystore.jks >/dev/null

      - name: Create key.properties
        run: |
          tee android/key.properties >/dev/null <<EOL
          storeFile=../../keystore.jks
          storePassword=${{ secrets.SIGNING_STORE_PASSWORD }}
          keyPassword=${{ secrets.SIGNING_KEY_PASSWORD }}
          keyAlias=${{ secrets.SIGNING_KEY_ALIAS }}
          EOL

      - uses: actions/download-artifact@v4
        with:
          name: scraped

      - name: Move data file
        run: cp data-scraper/data/raw.json assets/raw/

      - name: Get SHA1 fingerprint
        run: |
          SHA1=$(
            keytool -list -v \
              -keystore keystore.jks \
              -alias ${{ secrets.SIGNING_KEY_ALIAS }} \
              -storepass ${{ secrets.SIGNING_KEY_PASSWORD }} \
              -keypass ${{ secrets.SIGNING_STORE_PASSWORD }} |\
            grep SHA1 |\
            cut -d: -f2- |\
            xargs
          )
          echo "SHA1_FINGERPRINT=$SHA1" >> "$GITHUB_ENV"

      - name: Create .env file
        run: |
          tee .env <<-EOL
          GOOGLE_MAPS_APIKEY=${{ secrets.GOOGLE_MAPS_APIKEY }}
          SHA1_FINGERPRINT=${{ env.SHA1_FINGERPRINT }}
          EOL

      - name: Build debug apk
        run: flutter build apk --debug

      - name: Build release apk
        run: flutter build apk --release --shrink --obfuscate --split-debug-info=build/debug

      - uses: actions/upload-artifact@v4
        with:
          name: apk
          path: build/app/outputs/flutter-apk/*.apk
          retention-days: ${{ env.RETENTION_DAYS }}

      - name: Build release appbundle
        run: flutter build appbundle --release --shrink --obfuscate --split-debug-info=build/debug

      - uses: actions/upload-artifact@v4
        with:
          name: appbundle
          path: build/app/outputs/bundle/release/*.aab
          retention-days: ${{ env.RETENTION_DAYS }}
